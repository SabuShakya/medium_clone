import {useContext, useEffect} from 'react'
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from "contexts/currentUser"
import useLocalStorage from 'hooks/useLocalStorage';

const CurrentUserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user')
    const [, setCurrentUserSate] = useContext(CurrentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(() => {
        if (!token) {
            setCurrentUserSate(state => ({
                ...state,
                isLoggedIn: false
            }))
            return
        }
        doFetch()
        setCurrentUserSate(state => ({
            ...state,
            isLoading: true
        }))
    }, [doFetch,setCurrentUserSate,token])

    useEffect(() => {
        if (!response) {
            return
        }

        setCurrentUserSate(state => ({
            ...state,
            isLoading: false,
            isLoggedIn: true,
            currentUser: {...response.user}
        }))
    }, [response,setCurrentUserSate])

    return children
}

export default CurrentUserChecker