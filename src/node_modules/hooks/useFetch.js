import {useCallback, useEffect, useState} from "react"
import Axios from "axios"

import useLocalStorage from "hooks/useLocalStorage"

export default url => {
    const BASE_URL = "https://conduit.productionready.io/api"
    const [isLoading, setIsLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, setError] = useState(null)
    const [options, setOptions] = useState({})
    const [token] = useLocalStorage('token')

    const doFetch = useCallback((options = {}) => {
        setOptions(options)
        setIsLoading(true)
    }, [])

    useEffect(() => {
        if (!isLoading) {
            return
        }

        const requestOptions = {
            ...options,
            ...{
                headers: {
                    authorization: token ? `Token ${token}` : ''
                }
            }
        }

        Axios(BASE_URL + url, requestOptions)
            .then(res => {
                setResponse(res.data)
                setIsLoading(false)
            })
            .catch(err => {
                setError(err.response.data)
                setIsLoading(false)
            })
    }, [isLoading, url, options, token])

    return [{isLoading, response, error}, doFetch]
}
